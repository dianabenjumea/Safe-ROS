<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="scout_mini">


  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin rpy="1.57 0 1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/scout_mini_base_link2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57 0 1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/scout_mini_base_link2.dae"/>
      </geometry>
    </collision>
  </link>

  <!-- inertial_link -->
  <link name="inertial_link">
    <inertial>
      <mass value="60"/>
      <origin xyz="0.0 0.0 0.0"/>
      <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465"/>
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint>

  <!-- core_box_base_link -->
  <link name="core_box_base_link">
      <visual>
          <origin xyz="0 0 0.0219"
                  rpy="1.57 0 1.57" />
          <geometry>
              <mesh filename="package://scout_description/meshes/box_agile.stl" scale="0.001 0.001 0.001"/>
          </geometry>
          <material name="MetallicGray">
            <color rgba="0.7 0.7 0.7 1.0"/> <!-- Light gray metallic look -->
          </material>
      </visual>
      <collision>
      <origin
          xyz="0 0 0.0219"
          rpy="1.57 0 1.57" />
      <geometry>
          <mesh
          filename="package://scout_description/meshes/box_agile.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      </collision>
  </link>

  <joint name="box_fix_joint" type="fixed">
      <origin
          xyz="0 0 0.0219"
          rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="core_box_base_link"/>
  </joint>


  <!-- front_left_wheel_link -->
  <link name="front_left_wheel_link">
    <inertial>
      <mass value="3"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.7171" iyz="0" izz="0.1361"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>

  <joint name="front_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.2319755 0.2082515 0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>

  <!-- rear_left_wheel_link -->
  <link name="rear_left_wheel_link">
    <inertial>
      <mass value="3"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.7171" iyz="0" izz="0.1361"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>

  <joint name="rear_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="1.57 0 0" xyz="-0.2319755 0.2082515 0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>

  <!-- front_right_wheel_link -->
  <link name="front_right_wheel_link">
    <inertial>
      <mass value="3"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.7171" iyz="0" izz="0.1361"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>

  <joint name="front_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.2319755 -0.2082515 0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>

  <!-- rear_right_wheel_link -->  
  <link name="rear_right_wheel_link">
    <inertial>
      <mass value="3"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.7171" iyz="0" izz="0.1361"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://scout_description/meshes/wheel.dae"/>
      </geometry>
    </collision>
  </link>

  <joint name="rear_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.2319755 -0.2082515 0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>


  <transmission name="front_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="front_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="rear_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <transmission name="rear_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <!-- Controller configurations -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <!-- kp spring constant, kd damping constant -->
  <gazebo>
    <mu1 value="1.0"/>
    <mu2 value="0.9"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <minDepth value="0.001"/>
    <maxContacts value="64"/>
  </gazebo>
  
  <!-- Velodyne URDF, plugin, etc -->
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="0 0 0.1655" rpy="0 0 0" />
  </xacro:VLP-16>

<xacro:property name="M_PI" value="3.1415926535897931" />

    <joint name="velodyne_base_mount_joint" type="fixed">
      <origin xyz="0 0 0.165"/>
      <parent link="base_link"/>
      <child link="velodyne_base_link"/>
    </joint>
    
    <link name="velodyne_base_link">
      <inertial>
        <mass value="0.83"/>
        <origin xyz="0 0 0.03585"/>
        <inertia ixx="0.000908" ixy="0" ixz="0"
         iyy="0.000908" iyz="0"
         izz="0.001105"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae" />
        </geometry>
      </visual>
      <visual>
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae" />
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.03585"/>
        <geometry>
          <cylinder radius="0.0516" length="0.0717"/>
        </geometry>
      </collision>
    </link>
  
    <joint name="velodyne_base_scan_joint" type="fixed" >
      <origin xyz="0 0 0.0377" rpy="0 0 0" />
      <parent link="velodyne_base_link" />
      <child link="velodyne"/>
    </joint>

    <link name="velodyne">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
      </inertial>
      <visual>
        <origin xyz="0 0 -0.0377" />
        <geometry>
          <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <sphere radius="0"/>
        </geometry>
      </collision>
    </link>

    <!-- Gazebo requires the velodyne_gazebo_plugins package -->
   <gazebo reference="velodyne">
      <xacro:if value="false">
        <sensor type="gpu_ray" name="velodyne-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>1875</samples>
                <resolution>1</resolution>
                <min_angle>${M_PI}</min_angle>
                <max_angle>${M_PI}</max_angle>
              </horizontal>
              <vertical>
                <samples>16</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*M_PI/180.0}</min_angle>
                <max_angle> ${15.0*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${0.3}</min>
              <max>${130.0+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
            <topicName>/velodyne_points</topicName>
            <frameName>velodyne</frameName>
            <organize_cloud>false</organize_cloud>
            <min_range>0.9</min_range>
            <max_range>130.0</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:if>
      <xacro:unless value="false">
        <sensor type="ray" name="velodyne-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>1875</samples>
                <resolution>1</resolution>
                <min_angle>${M_PI}</min_angle>
                <max_angle>${M_PI}</max_angle>
              </horizontal>
              <vertical>
                <samples>16</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*M_PI/180.0}</min_angle>
                <max_angle> ${15.0*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.3</min>
              <max>131.0</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>/velodyne_points</topicName>
            <frameName>velodyne</frameName>
            <organize_cloud>false</organize_cloud>
            <min_range>0.9</min_range>
            <max_range>130.0</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
        </sensor>
      </xacro:unless>
    </gazebo>

  

  <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace></robotNamespace>
            <leftFrontJoint>front_left_wheel</leftFrontJoint>
            <rightFrontJoint>front_right_wheel</rightFrontJoint>
            <leftRearJoint>rear_left_wheel</leftRearJoint>
            <rightRearJoint>rear_right_wheel</rightRearJoint>
            <wheelSeparation>0.46</wheelSeparation>
            <wheelDiameter>0.32918</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <torque>1000</torque>
            <commandTopic>cmd_vel</commandTopic>
            <broadcastTF>true</broadcastTF>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <covariance_x>0.000100</covariance_x>
            <covariance_y>0.000100</covariance_y>
            <covariance_yaw>0.010000</covariance_yaw>
        </plugin>
  </gazebo>


<!--
  <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>20.0</odometryRate>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>
-->


</robot>
