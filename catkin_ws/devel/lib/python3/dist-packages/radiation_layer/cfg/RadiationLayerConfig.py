## *********************************************************
##
## File autogenerated for the radiation_layer package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'enabled', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to apply this plugin or not', 'min': False, 'max': True, 'srcline': 292, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'lower_threshold', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Lower threshold value - please set scale', 'min': -999.0, 'max': 999.0, 'srcline': 292, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'lower_threshold_scale', 'type': 'int', 'default': 0, 'level': 0, 'description': 'Scaling prefix for lower threshold', 'min': -9, 'max': 9, 'srcline': 292, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'nano_E', 'type': 'int', 'value': -9, 'srcline': 9, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'nano scale E-9', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'micro_E', 'type': 'int', 'value': -6, 'srcline': 10, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'micro scale E-6', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'milli_E', 'type': 'int', 'value': -3, 'srcline': 11, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'milli scale E-3', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'unit_E', 'type': 'int', 'value': 0, 'srcline': 12, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'unit scale E0', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'kilo_E', 'type': 'int', 'value': 3, 'srcline': 13, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'kilo scale E3', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'mega_E', 'type': 'int', 'value': 6, 'srcline': 14, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'mega scale E6', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'giga_E', 'type': 'int', 'value': 9, 'srcline': 15, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'giga scale E9', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set unit prefix'}", 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'upper_threshold', 'type': 'double', 'default': 200.0, 'level': 0, 'description': 'Upper threshold value - please set scale', 'min': -999.0, 'max': 999.0, 'srcline': 292, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'upper_threshold_scale', 'type': 'int', 'default': 0, 'level': 0, 'description': 'Scaling prefix for upper threshold', 'min': -9, 'max': 9, 'srcline': 292, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'nano_E', 'type': 'int', 'value': -9, 'srcline': 9, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'nano scale E-9', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'micro_E', 'type': 'int', 'value': -6, 'srcline': 10, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'micro scale E-6', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'milli_E', 'type': 'int', 'value': -3, 'srcline': 11, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'milli scale E-3', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'unit_E', 'type': 'int', 'value': 0, 'srcline': 12, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'unit scale E0', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'kilo_E', 'type': 'int', 'value': 3, 'srcline': 13, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'kilo scale E3', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'mega_E', 'type': 'int', 'value': 6, 'srcline': 14, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'mega scale E6', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'giga_E', 'type': 'int', 'value': 9, 'srcline': 15, 'srcfile': '/home/ubuntu/catkin_ws/src/nuclear_inspection/simple_radiation_layer/cfg/RadiationLayer.cfg', 'description': 'giga scale E9', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set unit prefix'}", 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 247, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

RadiationLayer_nano_E = -9
RadiationLayer_micro_E = -6
RadiationLayer_milli_E = -3
RadiationLayer_unit_E = 0
RadiationLayer_kilo_E = 3
RadiationLayer_mega_E = 6
RadiationLayer_giga_E = 9
